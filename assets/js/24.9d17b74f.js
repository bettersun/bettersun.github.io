(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{564:function(n,t,e){"use strict";e.r(t);var s=e(20),i=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"共通"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#共通"}},[n._v("#")]),n._v(" 共通")]),n._v(" "),e("p",[e("strong",[n._v("方法一览")])]),n._v(" "),e("ul",[e("li",[n._v("启动时自动执行")]),n._v(" "),e("li",[n._v("Excel的列名转换成数字")]),n._v(" "),e("li",[n._v("整数值转换为Excel的列名")]),n._v(" "),e("li",[n._v("下划线连接字符串转换为骆驼命名字符串")]),n._v(" "),e("li",[n._v("骆驼命名字符串转换为下划线连接字符串")])]),n._v(" "),e("ul",[e("li")]),n._v(" "),e("h3",{attrs:{id:"启动时自动执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动时自动执行"}},[n._v("#")]),n._v(" 启动时自动执行")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\'启动时自动执行\nSub auto_open()\n    MsgBox "Welcome to BS_VBA"\nEnd Sub\n')])])]),e("h3",{attrs:{id:"excel的列名转换成数字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#excel的列名转换成数字"}},[n._v("#")]),n._v(" Excel的列名转换成数字")]),n._v(" "),e("blockquote",[e("p",[n._v("相关常量定义")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("' 字母的个数\nPublic Const CHAR_CNT As Integer = 26\n")])])]),e("blockquote",[e("p",[n._v("函数定义")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("' Excel的列名转换成数字\n'\n'   功能：\n'     Excel的列名转换成数字\n'     无法正常转换的场合，返回-1\n'\n'   参数：\n'     colChar : Excel列名 (A、ZZ 等)\n'\n'   例：\n'     AZ => 52\n'     BA => 53\n'     ZZ => 702\n'     AAA => 703\nPublic Function getColIdx(colChar As String)\n    \n    ' 返回值\n    Dim idx As Integer\n    ' 临时值\n    Dim tmp As Integer\n\n    ' 循环变量\n    Dim i As Integer\n    Dim j As Integer\n\n    ' 字符串长度\n    Dim ln As Integer\n    \n    ' 各位字符\n    Dim chr() As String\n    ' Ascii码\n    Dim nChr() As Integer\n    ' Acsiic码取得字母顺序\n    Dim tmpN() As Integer\n    \n    ln = Len(colChar)\n\n    ReDim chr(ln) As String\n    ReDim nChr(ln) As Integer\n    ReDim tmpN(ln) As Integer\n  \n    For i = 1 To ln\n        ' 各位字母, 转换为大写\n        chr(i) = Mid(colChar, i, 1)\n        chr(i) = UCase(chr(i))\n        ' Ascii码\n        nChr(i) = Asc(chr(i))\n        ' Acsiic码取得字母顺序\n        tmpN(i) = nChr(i) - 65 + 1\n    Next i\n  \n    ' Error字符则退出,返回-1\n    ' * 性能非最优\n    For i = 1 To ln\n        If nChr(i) < 65 Or nChr(i) > 90 Then\n            Debug.Print \"Error!\"\n            getColIdx = -1\n            Exit Function\n        End If\n    Next i\n\n    ' 从高位(左边)开始循环\n    ' 列名ABC = >\n    '     26的2次方乘以A的Ascii码的字母顺序\n    '     + 26的1次方乘以B的Ascii码的字母顺序\n    '     + 26的0次方*C的Ascii码的字母顺序\n    j = 0\n    For i = ln To 1 Step -1\n        j = j + 1\n        tmp = CHAR_CNT ^ (i - 1) * tmpN(j)\n        idx = idx + tmp\n    Next i\n\n    getColIdx = idx\nEnd Function\n")])])]),e("ul",[e("li")]),n._v(" "),e("h3",{attrs:{id:"整数值转换为excel的列名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整数值转换为excel的列名"}},[n._v("#")]),n._v(" 整数值转换为Excel的列名")]),n._v(" "),e("blockquote",[e("p",[n._v("相关常量定义")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("' 字母的个数\nPublic Const CHAR_CNT As Integer = 26\n")])])]),e("blockquote",[e("p",[n._v("函数定义")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("' 整数值转换成Excel的列名\n'\n'   功能：\n'     整数值转换成Excel的列名\n'\n'   参数：\n'     colIdx : 整数(2、52 等)\n'\n'   例：\n'     52 => AZ\n'     702 => ZZ\n'     703 => AAA\n'     731 => ABC\nPublic Function getColChr(colIdx As Integer)\n\n    '循环变量\n    Dim i As Integer\n    '列名长数\n    Dim ln As Integer\n    \n    '传入值内部变量\n    Dim idx As Integer\n    '余数\n    Dim tail As Integer\n    '列名各字母在字母表中的顺序\n    Dim ch() As Integer\n    \n    '返回值\n    Dim s As String\n    \n    idx = colIdx\n    ln = 0\n    \n    Do\n        ln = ln + 1\n        ReDim Preserve ch(ln) As Integer\n        \n        '取余\n        tail = idx Mod CHAR_CNT\n       \n        '整除的情况\n        If tail = 0 Then\n            '保留26\n            ch(ln) = CHAR_CNT\n            '先减去26, 再舍去小数部分取整\n            idx = (idx - CHAR_CNT) \\ CHAR_CNT\n        '不能整除的情况\n        Else\n            '保留余数\n            ch(ln) = tail\n            '舍去小数部分取整\n            idx = idx \\ CHAR_CNT\n        End If\n       \n    '除后值大于0时循环,即除前值大于等于26\n    Loop While idx > 0\n    \n    'Ascii码转换为大写字符\n    For i = 1 To ln\n        s = chr(ch(i) + 65 - 1) & s\n    Next i\n    \n    getColChr = s\nEnd Function\n")])])]),e("ul",[e("li")]),n._v(" "),e("h3",{attrs:{id:"下划线连接字符串转换为骆驼命名字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下划线连接字符串转换为骆驼命名字符串"}},[n._v("#")]),n._v(" 下划线连接字符串转换为骆驼命名字符串")]),n._v(" "),e("blockquote",[e("p",[n._v("相关常量定义")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\' 下划线\nPublic Const S_UNDERBAR As String = "_"\n')])])]),e("blockquote",[e("p",[n._v("函数定义")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("'下划线连接字符串转换为骆驼命名字符串\n'\n'  功能：\n'    下划线连接字符串转换为骆驼命名字符串\n'\n'  参数：\n'    s : 转换对象字符串\n'\n'  例：\n'    abc_def_ghi => AbcDefGhi\nPublic Function uCaseWordHead(s As String)\n\n    Dim i As Integer\n    Dim arr() As String\n    \n    Dim head As String\n    Dim tail As String\n    Dim tmp As String\n    \n    '以下划线分隔为数组\n    arr() = Split(s, S_UNDERBAR)\n    \n    '使用Split,数组起始下标为0\n    For i = 0 To UBound(arr)\n        tmp = arr(i)\n        '首字母以外\n        tail = Right(tmp, Len(tmp) - 1)\n        '首字母大写\n        head = UCase(Left(tmp, 1))\n        \n        arr(i) = head & tail\n    Next i\n    \n    '字符数组转换成字符串\n    uCaseWordHead = Join(arr, \"\")\nEnd Function\n")])])]),e("ul",[e("li")]),n._v(" "),e("h3",{attrs:{id:"骆驼命名字符串转换为下划线连接字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#骆驼命名字符串转换为下划线连接字符串"}},[n._v("#")]),n._v(" 骆驼命名字符串转换为下划线连接字符串")]),n._v(" "),e("blockquote",[e("p",[n._v("相关常量定义")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\' 下划线\nPublic Const S_UNDERBAR As String = "_"\n')])])]),e("blockquote",[e("p",[n._v("函数定义")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("'骆驼命名字符串转换为下划线连接字符串\n'\n'  功能：\n'    骆驼命名字符串转换为下划线连接字符串\n'\n'  参数：\n'    s : 转换对象字符串\n'\n'  例：\n'    AbcDefGhiZyx => abc_def_ghi_zyx\nPublic Function lCaseWordHeadUnderBar(s As String)\n    \n    Dim i As Integer\n    \n    Dim tmp As String\n    Dim result As String\n    \n    For i = 1 To Len(s)\n        tmp = Mid(s, i, 1)\n        ' 判断是否大写\n        If Asc(tmp) >= 65 And Asc(tmp) <= 90 Then\n        \n            '转换为小写\n            tmp = LCase(tmp)\n            \n            '首字母以外,加下划线\n            If i > 1 Then\n                tmp = S_UNDERBAR & tmp\n            End If\n        End If\n        \n        result = result & tmp\n    Next\n    \n    lCaseWordHeadUnderBar = result\nEnd Function\n")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);