(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{553:function(e,t,s){"use strict";s.r(t);var a=s(20),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"goframe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goframe"}},[e._v("#")]),e._v(" GoFrame")]),e._v(" "),s("h2",{attrs:{id:"简单api开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单api开发"}},[e._v("#")]),e._v(" 简单API开发")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("初始化项目")]),e._v(" "),s("p",[e._v("本例使用xgo。"),s("br"),e._v("\n新建xgo目录，然后进入目录后，执行命令 gf init xgo")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("gf init xgo\n")])])])]),e._v(" "),s("li",[s("p",[e._v("新建api")]),e._v(" "),s("p",[e._v("本例机能使用 welcome。"),s("br"),e._v("\n在./app/api目录下，新建机能目录。"),s("br"),e._v("\n在新建的机能目录下新建api的代码文件。")]),e._v(" "),s("p",[e._v("代码文件路径："),s("br"),e._v("\n./app/api/welcome/welcome.go")]),e._v(" "),s("p",[e._v("代码内容：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('package welcome\n\nimport (\n    "github.com/gogf/gf/net/ghttp"\n)\n\n// \nfunc Welcome(r *ghttp.Request) {\n    r.Response.Writeln("Welcome to goframe!")\n}\n')])])]),s("p",[e._v("包名使用welcome。"),s("br"),e._v("\n引入goframe封装的ghttp。"),s("br"),e._v("\n编写API的处理函数，函数的参数是goframe封装的gttp.Request的指针。")])]),e._v(" "),s("li",[s("p",[e._v("编写中间件")]),e._v(" "),s("p",[e._v("本例编写一个跨域中间件"),s("br"),e._v("\n在根目录下新建目录middleware。"),s("br"),e._v("\n在middleware目录新建cors.go")]),e._v(" "),s("p",[e._v("代码内容：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('package middleware\n\nimport "github.com/gogf/gf/net/ghttp"\n\n// 允许接口跨域请求\nfunc CORS(r *ghttp.Request) {\n    r.Response.CORSDefault()\n    r.Middleware.Next()\n}\n')])])])]),e._v(" "),s("li",[s("p",[e._v("注册路由")]),e._v(" "),s("p",[e._v("默认的路由文件在./router/router.go中。")]),e._v(" "),s("p",[e._v("官方示例中的说明：")]),e._v(" "),s("blockquote",[s("p",[e._v("// 你可以将路由注册放到一个文件中管理，"),s("br"),e._v("\n// 也可以按照模块拆分到不同的文件中管理，"),s("br"),e._v("\n// 但统一都放到router目录下。")])]),e._v(" "),s("p",[e._v("本例先放在单一文件中。")]),e._v(" "),s("p",[e._v("代码内容：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('package router\n\nimport (\n    "github.com/gogf/gf/frame/g"\n    "github.com/gogf/gf/net/ghttp"\n\n    "xgo/app/api/hello"\n    "xgo/app/api/welcome"\n\n    "xgo/middleware"\n)\n\nfunc init() {\n    s := g.Server()\n    s.Group("/", func(group *ghttp.RouterGroup) {\n\n        group.Middleware(middleware.CORS)\n\n        group.ALL("/", hello.Hello)\n        group.ALL("/welcome", welcome.Welcome)\n    })\n}\n\n')])])])]),e._v(" "),s("li",[s("p",[e._v("运行服务")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("go run main.go\n")])])]),s("p",[e._v("运行服务后可在控制台看到所有服务的路由。")])]),e._v(" "),s("li",[s("p",[e._v("访问URL")]),e._v(" "),s("p",[e._v("访问 http://localhost:8199/welcome")]),e._v(" "),s("p",[e._v("输出结果：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Welcome to goframe!\n")])])])]),e._v(" "),s("li",[s("p",[e._v("API返回JSON")]),e._v(" "),s("p",[e._v("使用ghttp.Request.Response.WriteJson()方法返回JSON。"),s("br"),e._v("\n修改 ./app/api/welcome/welcome.go")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('package welcome\n\nimport (\n    "github.com/gogf/gf/net/ghttp"\n)\n\ntype WelcomeInfo struct {\n    Message string `json:"message"`\n}\n\nfunc Welcome(r *ghttp.Request) {\n    var welcomeInfo WelcomeInfo\n    welcomeInfo.Message = "Welcome to goframe!"\n\n    r.Response.WriteJson(welcomeInfo)\n}\n')])])]),s("p",[e._v("首先定义 WelcomeInfo 结构体，添加一个可导出属性Message，并指定json解析用键值。"),s("br"),e._v("\nWelcome方法中，给WelcomeInfo实例的Message属性设定一个值。"),s("br"),e._v("\n然后使用 ghttp.Request.Response.WriteJson() 返回JSON。")]),e._v(" "),s("p",[e._v("访问URL后返回的原始数据为：")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Welcome to goframe!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])])]),e._v(" "),s("h2",{attrs:{id:"使用controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用controller"}},[e._v("#")]),e._v(" 使用Controller")]),e._v(" "),s("blockquote",[s("p",[e._v("基于前面的工程")])]),e._v(" "),s("ol",[s("li",[s("p",[e._v("添加Controller")]),e._v(" "),s("p",[e._v("在./app/api/welcome/welcome.go里定义一个空的结构体Controller作为API管理对象。"),s("br"),e._v("\n路由注册时只需要把Controller注册给 /welcome，然后所有Controller指针的导出函数都会自动映射到对应的URL。"),s("br"),e._v("\n非导出函数不会被映射。")]),e._v(" "),s("p",[e._v("映射规则：")]),e._v(" "),s("ul",[s("li",[e._v("函数名的首字母大写，映射到对应的URL的首字母小写。")]),e._v(" "),s("li",[e._v("函数名中间的大写字母会映射为 短线+小写字母。")])]),e._v(" "),s("p",[e._v("例："),s("br"),e._v("\nWelcomeMessage()函数映射的URL为 /welcome/welcome-message。")]),e._v(" "),s("p",[e._v("例如："),s("br"),e._v("\nwelcome.go里为Controller定义了一个方法：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('package welcome\n\nimport (\n    "github.com/gogf/gf/net/ghttp"\n)\n\ntype Controller struct{}\n\nfunc (c *Controller) Come(r *ghttp.Request) {\n\n    r.Response.Writeln("Come to goframe!")\n}\n\n')])])])]),e._v(" "),s("li",[s("p",[e._v("改变路由注册方式")]),e._v(" "),s("p",[e._v("新建一个welcome的Controller实例。"),s("br"),e._v("\n然后把这个Controller实例注册到 /welcome 。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('package router\n\nimport (\n    "github.com/gogf/gf/frame/g"\n    "github.com/gogf/gf/net/ghttp"\n\n    "xgo/app/api/hello"\n    "xgo/app/api/welcome"\n\n    "xgo/middleware"\n)\n\nfunc init() {\n    s := g.Server()\n    s.Group("/", func(group *ghttp.RouterGroup) {\n\n        ctlWelcome := new(welcome.Controller)\n\n        group.Middleware(middleware.CORS)\n\n        group.ALL("/", hello.Hello)\n        group.ALL("/welcome", ctlWelcome)\n    })\n}\n')])])])]),e._v(" "),s("li",[s("p",[e._v("运行服务")]),e._v(" "),s("p",[e._v("运行服务后可在控制台看到所有服务的路由。"),s("br"),e._v("\n可以看到，./app/api/welcome/welcome.go里Controller的Come函数自动注册到/welcome/come的URL。")])]),e._v(" "),s("li",[s("p",[e._v("访问URL")]),e._v(" "),s("p",[e._v("访问 http://localhost:8199/welcome/come")]),e._v(" "),s("p",[e._v("输出结果：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Come to goframe!\n")])])])])]),e._v(" "),s("h2",{attrs:{id:"使用controller并调用service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用controller并调用service"}},[e._v("#")]),e._v(" 使用Controller并调用Service")]),e._v(" "),s("blockquote",[s("p",[e._v("基于前面的工程")])]),e._v(" "),s("ol",[s("li",[s("p",[e._v("新建Service用代码文件")]),e._v(" "),s("p",[e._v("在./app/api/service目录下新建welcome目录，在welcome目录下新建welcome.go文件。")]),e._v(" "),s("p",[e._v("代码路径："),s("br"),e._v("\n./app/api/service/welcome/welcome.go")]),e._v(" "),s("p",[e._v("代码内容：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('package welcome\n\ntype WelcomeInfo struct {\n    Message string `json:"message"`\n}\n\nfunc Message() string {\n    return "Welcome to goframe!"\n}\n\nfunc Info() WelcomeInfo {\n\n    var welcomeInfo WelcomeInfo\n    welcomeInfo.Message = "Welcome to goframe!"\n\n    return welcomeInfo\n}\n')])])])]),e._v(" "),s("li",[s("p",[e._v("在API文件Controller的函数中调用Service")]),e._v(" "),s("p",[e._v("需要引入服务的机能包。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('package welcome\n\nimport (\n    "github.com/gogf/gf/net/ghttp"\n\n    "xgo/app/service/welcome"\n)\n\ntype Controller struct{}\n\nfunc (c *Controller) Message(r *ghttp.Request) {\n\n    message := welcome.Message()\n    r.Response.Writeln(message)\n}\n\nfunc (c *Controller) Info(r *ghttp.Request) {\n\n    welcomeInfo := welcome.Info()\n    r.Response.WriteJson(welcomeInfo)\n}\n')])])])]),e._v(" "),s("li",[s("p",[e._v("运行服务后访问URL确认。")]),e._v(" "),s("ul",[s("li",[e._v("访问 http://localhost:8199/welcome/message")])]),e._v(" "),s("p",[e._v("输出结果：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Welcome to goframe!\n")])])]),s("ul",[s("li",[e._v("访问 http://localhost:8199/welcome/info")])]),e._v(" "),s("p",[e._v("输出结果：")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Welcome to goframe!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])])]),e._v(" "),s("h2",{attrs:{id:"访问数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问数据库"}},[e._v("#")]),e._v(" 访问数据库")]),e._v(" "),s("blockquote",[s("p",[e._v("基于前面的工程")])]),e._v(" "),s("ol",[s("li",[e._v("创建数据库")])]),e._v(" "),s("p",[e._v("MySQL")]),e._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SCHEMA")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("db_xgo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DEFAULT")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CHARACTER")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SET")]),e._v(" utf8mb4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[e._v("修改配置文件里的数据库连接")])]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Database.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("database")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("link")]),e._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"mysql:root:123456@tcp(127.0.0.1:3306)/db_xgo"')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("debug")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Database logger.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("database.logger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("Path")]),e._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/tmp/log/gf-app/sql"')]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("Level")]),e._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"all"')]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("Stdout")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[e._v("新建表")]),e._v(" "),s("p",[e._v("新建系统用户表 sys_user。")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("CREATE TABLE `db_xgo`.`sys_user` (\n  `id` INT NOT NULL,\n  `user_id` VARCHAR(45) NULL,\n  `password` VARCHAR(45) NULL,\n  `user_name` VARCHAR(45) NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC));\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[e._v("执行GoFrame的命令生成数据库表操作相关代码")]),e._v(" "),s("p",[e._v("GoFrame命令官方文档：\nhttps://goframe.org/toolchain/cli#")]),e._v(" "),s("p",[e._v("在Go程序根目录下启动命令行执行命令")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("gf gen model ./app/model\n")])])]),s("p",[e._v("所有表的操作代码都会被生成。\n上述命令的执行过程。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("E:\\develop\\github.com\\bettersun\\xgo\\xgo>gf gen model ./app/model\npath './app/model' is not empty, files might be overwrote, continue? [y/n]: y\n2020-07-28 16:48:41.084 [DEBU] [  7 ms] SHOW TABLES\n2020-07-28 16:48:41.157 [DEBU] [  2 ms] SHOW FULL COLUMNS FROM `sys_user`\ngenerated: ./app/model\\sys_user\\sys_user.go\ngenerated: ./app/model\\sys_user\\sys_user_entity.go\ngenerated: ./app/model\\sys_user\\sys_user_model.go\ndone!\n")])])])]),e._v(" "),s("li",[s("p",[e._v("添加表操作代码")]),e._v(" "),s("p",[e._v("在./app/service/welcome/welcome.go里添加函数，在函数里执行对表的查询。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('func WelecomeUser() string {\n\n    var message string\n    sysUser, err := sys_user.FindAll()\n\n    if err != nil {\n        fmt.Println(err)\n        message = "Error"\n        return message\n    }\n\n    if len(sysUser) > 0 {\n        message = "Welcome, " + sysUser[0].UserName + "."\n    } else {\n        message = "No user."\n    }\n\n    return message\n}\n')])])])]),e._v(" "),s("li",[s("p",[e._v("添加路由函数")]),e._v(" "),s("p",[e._v("在./app/api/welcome/welcome.go里添加函数，在函数里调用Service里的函数。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("func (c *Controller) WelcomeUser(r *ghttp.Request) {\n\n    WelecomeUser := welcome.WelecomeUser()\n    r.Response.Writeln(WelecomeUser)\n}\n")])])])]),e._v(" "),s("li",[s("p",[e._v("运行服务访问URL")]),e._v(" "),s("p",[e._v("访问 http://localhost:8199/welcome/welcome-user")]),e._v(" "),s("p",[e._v("输出结果：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("No user.\n")])])])]),e._v(" "),s("li",[s("p",[e._v("在数据库表中添加数据")]),e._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INSERT")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("db_xgo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("sys_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("user_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("VALUES")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'bettersun'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'123456'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'此心光明'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("blockquote",[s("p",[e._v("确保已提交。")])])]),e._v(" "),s("li",[s("p",[e._v("再次访问URL")]),e._v(" "),s("p",[e._v("访问 http://localhost:8199/welcome/welcome-user")]),e._v(" "),s("p",[e._v("输出结果：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Welcome, 此心光明.\n")])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);